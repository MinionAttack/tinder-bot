version: 1
disable_existing_loggers: true

formatters:
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  error:
    format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: standard
    stream: ext://sys.stdout

  critical_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: CRITICAL
    formatter: standard
    filename: ./logs/critical.txt
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    mode: a

  debug_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: standard
    filename: ./logs/debug.txt
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    mode: a

  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: error
    filename: ./logs/error.txt
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    mode: a

  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: standard
    filename: ./logs/information.txt
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    mode: a

  warn_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: WARN
    formatter: standard
    filename: ./logs/warning.txt
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    mode: a

root:
  level: NOTSET
  handlers: [console]
  propagate: yes

loggers:
  production:
    level: INFO
    handlers: [critical_file_handler, error_file_handler, info_file_handler, warn_file_handler]
    propagate: no

  development:
    level: DEBUG
    handlers: [console, debug_file_handler]
    propagate: no